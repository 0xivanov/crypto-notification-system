version: "3"

services:
  subscriber-service:
    build:
      context: ./subscriber-service
      dockerfile: ./subscriber-service.dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      BROKERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  aggregator-service:
    build:
      context: ./aggregator-service
      dockerfile: ./aggregator-service.dockerfile
    restart: always
    environment:
      BROKERS: kafka:9092
      REDIS_PASSWORD: 1234
      REDIS_HOST: redis:6379
    ports:
      - "4000:4000"
    depends_on:
      redis:
        condition: service_started
      kafka:
        condition: service_healthy

  notification-service:
    build:
      context: ./notification-service
      dockerfile: ./notification-service.dockerfile
    restart: always
    environment:
      BROKERS: kafka:9092
      MONGO_URI: mongodb://root:password@mongodb
      SMTP_HOST: smtp.gmail.com
      SMTP_USER: ivanivanov.ii726@gmail.com
      SMTP_PASS: uqrn mrsw erke wbhn
    ports:
      - 4001:4000
    depends_on:
      mongodb:
        condition: service_started
      kafka:
        condition: service_healthy

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 5s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    restart: always
    command: redis-server /etc/redis/redis.conf
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
      - ./conf/redis.conf:/etc/redis/redis.conf
    environment:
      REDIS_PASSWORD: 1234
      REDIS_PORT: 6379
      REDIS_DATABASES: 1

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password